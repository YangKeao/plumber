//
// Created by intellij-pest on 2019-04-16
// plumber
// Author: yangkeao
//

WHITESPACE = _{ " " }
COMMENT = _{ "//" ~ (!"\n" ~ ANY)*}

definition_prefix = _{ ext }
    ext = {"extern"}

binary_operation = _{ plus | mul | minus | div }
    plus = {"+"}
    mul = {"*"}
    minus = {"-"}
    div = {"/"}

ident = @{ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_")* }

keywords = {"let" | "in"}

variable_name = @{ !keywords ~ ident }

primitive_type = _{ i8 | i16 | i32 | i64 | u8 | u16 | u32 | u64 }
    i8 = {"i8"}
    i16 = {"i16"}
    i32 = {"i32"}
    i64 = {"i64"}
    u8 = {"u8"}
    u16 = {"u16"}
    u32 = {"u32"}
    u64 = {"u64"}

type_name = {primitive_type | struct_name}

struct_name = {variable_name}

variable_define = { variable_name ~ ":" ~ type_name }

const_value = @{ ASCII_DIGIT }

function_call = {
    variable_name ~ (monadic_expression | ("(" ~ binary_expression ~ ")"))+
}

monadic_expression = {
    function_call |
    variable_name |
    const_value   |
    ("(" ~ monadic_expression ~ ")")
}

binary_expression = {
    monadic_expression ~ (binary_operation ~ expression) |
    ("(" ~ binary_expression ~ ")")
}

expression = {
    binary_expression |
    monadic_expression
}

binding = {
    variable_define ~ "=" ~ expression
}

local_binding = { "let" ~ (binding ~ "\n"? ~ "and")* ~ binding ~ "\n"? ~ "in" }

split = { "split" ~ variable_name ~ const_value ~ variable_name ~ variable_name }

schedule = _{split}

attribute = { "@" ~ schedule ~ "\n"}

struct_definition = { "struct" ~ struct_name ~ "(" ~ (type_name ~ "," ~ "\n"?)* ~ type_name ~ "\n"? ~ ")"}

fun_definition = {
    attribute* ~
    definition_prefix* ~ "let" ~ variable_name ~ variable_define* ~ "->" ~ type_name ~ "=" ~ "\n"? ~
        local_binding? ~ "\n"? ~ expression
}

statement = _{ fun_definition | struct_definition }

program = _{ SOI ~ "\n"* ~ (statement ~ "\n"+)* ~ statement? ~ EOI }
